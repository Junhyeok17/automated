jobs: 
- job: HostedAgent
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: TerraformInstaller@0
    inputs: 
      terraformVersion: latest
    displayName: Install Terraform
  - script: |
      az login --service-principal -u 0cd2a780-3598-4328-8db8-8b7ba273e024 -p 7wj8Q~ZoQE19B3yHSRlA9XoXzu63nIHjCWuI8a1Z --tenant c86959ed-45e5-47f5-8ef5-308ca79916fc
      cd $(Agent.BuildDirectory)
    displayName: 'Azure Login'
  - powershell: |
      $psexecUrl = 'https://download.sysinternals.com/files/PSTools.zip'
      $downloadPath = Join-Path $env:USERPROFILE 'Downloads\PSTools.zip'
      Invoke-WebRequest -Uri $psexecUrl -OutFile $downloadPath
      Expand-Archive -Path $downloadPath -DestinationPath $env:USERPROFILE\Downloads\PSTools
      $psexecPath = Join-Path $env:USERPROFILE\Downloads\PSTools 'PsExec.exe'
      Copy-Item -Path $psexecPath -Destination 'C:\Windows\System32\PsExec.exe'
      [System.Environment]::SetEnvironmentVariable('Path', [System.Environment]::GetEnvironmentVariable('Path', [System.EnvironmentVariableTarget]::Machine) + ";$psexecPath", [System.EnvironmentVariableTarget]::Machine)
    displayName: 'Download and Install PsExec'
  - powershell: |
      $TESTIMG = $env:TESTIMG -replace '"', ''
      $ISSUE = $env:ISSUE -replace '"', ''
      $ASSIGNEE = $env:ASSIGNEE -replace '"', ''
      $REVISION = $env:REVISION -replace '"', ''

      echo "All Test Agents and DKNS are in use. Additional creation is in progress"

      # 서브넷 리스트에서 가장 마지막에 생성 된 서브넷 번호 확인
      $subnet_jsonOutput = az network vnet subnet list --resource-group Automated_Test --vnet-name DtlAutomated_Test | Out-String | ConvertFrom-Json
      $subnet = $subnet_jsonOutput | Where-Object { $_.name -match "subnet-(\d+)" } | Select-Object -ExpandProperty name

      $subnet = $subnet | Select-Object -Last 1
      echo "가장 마지막에 생성 된 가상 머신 $subnet 확인 됨."

      # 가장 마지막에 생성 된 서브넷 번호에 1을 더해 생성 할 서브넷 명과 서브넷 번호 정의
      $subnetNumber = [int]($subnet -split "-")[1]
      $subnetNumber++
      $subnet = "subnet-{0:D4}" -f $subnetNumber
      echo "생성 할 서브넷 명 : $subnet / 서브넷 번호 : $subnetNumber"

      # 신규 서브넷 생성 및 기존 보안그룹 할당
      az network vnet subnet create --resource-group Automated_Test --vnet-name DtlAutomated_Test --name $subnet --address-prefix 10.0.$subnetNumber.0/24 --network-security-group test-nsg

      # 모든 Agent 및 DKNS 리스트 확인
      $vm_jsonOutput = az vm list --show-details | Out-String | ConvertFrom-Json
      $Agent = $vm_jsonOutput | Where-Object { $_.name -match "Agent(\d+)" } | Select-Object -ExpandProperty name
      $dkns = $vm_jsonOutput | Where-Object { $_.name -match "dkns(\d+)" } | Select-Object -ExpandProperty name

      # 가장 마지막 Agent, DKNS 번호 확인
      $Agent = $Agent | Select-Object -Last 1
      $dkns = $dkns | Select-Object -Last 1

      $AgentNumber = [int]($Agent -split "Agent")[1]
      $dknsNumber = [int]($dkns -split "dkns")[1]

      $AgentNumber++
      $dknsNumber++

      $Agent = "Agent{0:D2}" -f $AgentNumber
      $dkns = "dkns{0:D2}" -f $dknsNumber

      echo "생성해야 할 가상 머신 $Agent 확인 됨."
      echo "생성해야 할 가상 머신 $dkns 확인 됨."

      # Agent에 맞는 번호의 PublicIP 할당
      $PublicIP = $Agent + "PublicIP"

      echo "할당해야 할 공인 IP 명 : $PublicIP"

      # 위에서 정의한 내용들을 토대로 Agent VM 및 DKNS VM 생성 (생성해야 할 Agent VM 명, 서브넷, 공인IP)
      az vm create --resource-group Automated_Test --name $Agent --computer-name $Agent --image "/subscriptions/f85dce05-6791-4464-afde-6ac8649b9b3d/resourceGroups/myGalleryRG/providers/Microsoft.Compute/galleries/myGallery/images/myImageDefinition" --admin-username Tester --admin-password Tester1234@! --specialized --vnet-name DtlAutomated_Test --subnet $subnet --size "Standard_B2ms" --security-type TrustedLaunch --public-ip-address $PublicIP --nsg test-nsg --enable-secure-boot false
      az vm create --resource-group Automated_Test --name $dkns --computer-name $dkns --image Canonical:0001-com-ubuntu-server-focal:20_04-lts:latest --admin-username $dkns --authentication-type ssh --ssh-key-name DKNS --vnet-name DtlAutomated_Test --subnet $subnet --size "Standard_B2s" --nsg test-nsg

      # 이슈 번호를 바탕으로 DKNS가 바라 볼 사이트 도메인 추출
      $ISSUEDKNS = $ISSUE -replace '-', '' -replace 'GN', 'gn'
      echo "DKNS SITE: $ISSUEDKNS"

      # DKNS 공인 IP 추출
      $dknsIP = az vm show -d -g Automated_Test -n $dkns --query publicIps -o tsv
      $dknsprivateIP = az vm show -d -g Automated_Test -n $dkns --query publicIps -o tsv
      $AgentIP = az vm show -d -g Automated_Test -n $Agent --query publicIps -o tsv

      echo "DKNS 공인IP $dknsIP"
      echo "DKNS PrivateIP $dknsprivateIP"

      icacls "$(Build.SourcesDirectory)/start/DKNS.pem" /inheritance:r
      icacls "$(Build.SourcesDirectory)/start/DKNS.pem" /grant:r "$($env:USERNAME):R"

      echo "pem 파일 권한 변경"

      echo "VM 구동 시까지 30초 대기"
      Start-Sleep -Seconds 30

      # ssh 연결 및 최신 DKNS 설치 명령 전송
      Start-Process -FilePath "ssh" -ArgumentList "-o StrictHostKeyChecking=no", "-i", "$(Build.SourcesDirectory)/start/DKNS.pem", "$dkns@$dknsIP", "curl -s https://docs.genians.com/install/ztna-sensor.sh | sudo SITELOCALE=ko BRANCH=-dev bash -s $ISSUEDKNS.demo.genians.co.kr" -NoNewWindow -PassThru

      # 생성한 Agent VM에 테스트 명령 전송
      $secpasswd = ConvertTo-SecureString "Tester1234@!" -AsPlainText -Force
      $credential = New-Object System.Management.Automation.PSCredential ("Tester", $secpasswd)
      New-PSDrive -Name Remote -PSProvider FileSystem -Root "\\$AgentIP\C$" -Credential $credential
      Copy-Item -Path "$(Build.SourcesDirectory)/start/testrun.bat" -Destination "Remote:\" -Force
      Remove-PSDrive -Name Remote
      psexec -accepteula \\$AgentIP -u Tester -p Tester1234@! -i 1 -h cmd /C start /MIN C:/testrun.bat $TESTIMG $ISSUE $ASSIGNEE $REVISION $Agent $dkns $dknsprivateIP

    displayName: 'Azure Create VM/DKNS AND Run Test'
    workingDirectory: $(Build.SourcesDirectory)/start